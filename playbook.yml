---
- hosts: wordpress
  become: yes
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install LAMP
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]

    - name: Install PHP Extensions
      apt: name={{ item }} update_cache=yes state=latest
      loop: "{{ php_extensions }}"

  # Wordpress and Apache configuration
    - name: Create document root
      file:
        path: "/srv/www/"
        state: directory
        owner: "www-data"
        group: "www-data"
        mode: '0755'

    - name: Push the apache.conf
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
      notify: Reload Apache

    - name: Enable mod_rewrite
      shell: /usr/sbin/a2enmod rewrite
      notify: Reload Apache

    - name: Enable the site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      notify: Restart Apache
      
    - name: Download the latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/srv/www/"
        remote_src: yes

    - name: Set ownership
      file:
        path: "/srv/www/{{ http_host }}"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data

    - name: Set permissions for directories
      shell: "/usr/bin/find /srv/www/{{ http_host }}/ -type d -exec chmod 750 {} \\;"

    - name: Set permissions for files
      shell: "/usr/bin/find /srv/www/{{ http_host }}/ -type f -exec chmod 640 {} \\;"

    - name: Push the wp-config.php
      template:
        src: "files/wp-config.php.j2"
        dest: "/srv/www/{{ http_host }}/wp-config.php"

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

- hosts: database
  become: yes
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install MySQL and PHP modules
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]

 # MySQL Configuration
    - name: Create MySQL database for WordPress
      shell:  exist=$(sudo mysql -u root -e "SHOW DATABASES;" 2>/dev/null | grep -c {{ database_name }});if [ $exist -eq 0 ];then sudo mysql -u root --execute="CREATE DATABASE {{ database_name }};";fi
      
    - name: Create MySQL user for WordPress
      shell: exist=$(sudo mysql -u root -e "SELECT User, Host FROM mysql.user;" 2>/dev/null | grep -c {{ database_user }});if [ $exist -eq 0 ];then sudo mysql -u root --execute="CREATE USER {{ database_user }}@{{ wordpress_ip }} IDENTIFIED BY '{{ database_user_password }}';";fi

    - name: Grant the necessary privileges to the wordpress user
      shell: exist=$(sudo mysql -u root -e "SHOW GRANTS FOR {{ database_user }}@{{ wordpress_ip }};" 2>/dev/null | grep -c "GRANT ALL PRIVILEGES");if [ $exist -eq 0 ];then sudo mysql -u root --execute="GRANT ALL ON {{ database_user }}.* TO {{ database_user }}@{{ wordpress_ip }};";fi

    - name: Flush privileges
      shell: mysql -u root --execute="FLUSH PRIVILEGES;"
      
    - name: Push the mysqld.cnf
      template:
        src: "files/mysqld.cnf.j2"
        dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"

    - name: Restart MySQL
      service:
        name: mysql
        state: restarted

    - name: Push tablesize_before.sql
      template:
        src: "files/tablesize_before.sql.j2"
        dest: "/home/ubuntu/tablesize_before.sql"

    - name: Push tablesize_after.sql
      template:
        src: "files/tablesize_after.sql.j2"
        dest: "/home/ubuntu/tablesize_after.sql"

    - name: Push table_optimize_script.sh
      template:
        src: "files/table_optimize_script.sh.j2"
        dest: "/home/ubuntu/table_optimize_script.sh"

    - name: Set ownership
      file:
        path: "/home/ubuntu/"
        state: directory
        recurse: yes
        owner: ubuntu
        group: ubuntu

    - name: Set permissions for table optimization scripts
      shell: "/usr/bin/find /home/ubuntu/ -type f -exec chmod 755 {} \\;"

    - name: Add job triggering logs rotation.
      cron:
        user: 'ubuntu'
        name: 'database optimize'
        weekday: "0"
        minute: "0"
        hour: "12"
        job: '/home/ubuntu/table_optimize_script.sh'
        state: present
